/* Grid layout */

.container {
    margin-left: auto;
    margin-right: auto;
    padding-left: 2 * $default-space;
    padding-right: 2 * $default-space;
    width: 100%;
}

.g {
    align-content: flex-start;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    &.g-reverse {
        flex-direction: row-reverse;
    }

    &.g-nowrap {
        flex-wrap: nowrap !important;
        overflow-x: auto !important;
    }

    .u {
        flex: 1;
        max-width: 100%;
        padding: 0 $min-space;
    }
}

.u {
    &.u-auto {
        flex: none;
        width: auto;
    }

    @for $i from 1 through $grid-len {
        &.u-#{$i} {
            flex: none;
            width: ($i / $grid-len) * 100%;
        }
    }

    @for $i from 1 through $grid-len {
        &.u-offset-#{$i} {
            margin-left: ($i / $grid-len) * 100%;
        }
    }
}

@each $bp-name, $bp-size in $breakpoints {
    .u {
        @include breakpoint-max($bp-size) {
            &.u-auto-#{$bp-name} {
                flex: none;
                width: auto;
            }

            @for $i from 1 through $grid-len {
                &.u-#{$i}-#{$bp-name} {
                    flex: none;
                    width: ($i / $grid-len) * 100%;
                }
            }

            @for $i from 1 through $grid-len {
                &.u-offset-#{$i}-#{$bp-name} {
                    margin-left: ($i / $grid-len) * 100%;
                }
            }
        }
    }
}
